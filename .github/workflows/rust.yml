name: Rust

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * 1"
env:
  CARGO_TERM_COLOR: always

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir: ["./2018/rust", "./2019/rust", "./2020/rust"]

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - uses: Swatinem/rust-cache@v1
        with:
          working-directory: ${{ matrix.dir }}

      # - name: âš¡ Cache
      #   uses: actions/cache@v2
      #   with:
      #     path: |
      #       ${{ matrix.dir }}/.cargo/registry/index
      #       ${{ matrix.dir }}/.cargo/registry/cache
      #       ${{ matrix.dir }}/.cargo/git
      #       ${{ matrix.dir }}/target
      #     key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # - name: Build
      #   run: cargo build --verbose
      #   working-directory: ${{ matrix.dir }}

      - name: Build & Test
        run: cargo test --release # Release profile. Prevents benchmark recompilation.
        working-directory: ${{ matrix.dir }}

      - name: Run benchmark
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        run: cargo bench --bench criterion -- --output-format bencher | tee output.txt
        working-directory: ${{ matrix.dir }}

      # https://github.com/rhysd/github-action-benchmark/blob/a1914d7dcbe14d006e4b5f12c7ff303a82a411f1/examples/criterion-rs/README.md
      - name: Store benchmark result
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        uses: rhysd/github-action-benchmark@v1
        with:
          name: Rust Benchmark
          tool: "cargo"
          output-file-path: ${{ matrix.dir }}/output.txt
          github-token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          auto-push: true
